{"version":3,"sources":["./src/app/app.component.css","./src/environments/environment.prod.ts","./src/app/tv-shows-list/tv-shows-list.component.ts","./src/app/safe-url.pipe.ts","./src/app/movie-detail/movie-detail.component.css","./src/app/shows-search-form/shows-search-form.component.html","./src/app/movies-list/movies-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/movie-detail/movie-detail.component.html","./src/app/shows-search-form/shows-search-form.component.ts","./src/app/app.module.ts","./src/app/movies-list/movies-list.component.css","./src/app/movies-search-form/movies-search-form.component.ts","./src/app/movies-search-form/movies-search-form.component.css","./src/app/movies-list/movies-list.component.ts","./src/app/tv-shows-list/tv-shows-list.component.html","./src/app/tv-shows-list/tv-shows-list.component.css","./src/app/shows.service.ts","./src/app/movies-search-form/movies-search-form.component.html","./src/app/movie-detail/movie-detail.component.ts","./src/app/movies.service.ts","./src/app/shows-search-form/shows-search-form.component.css","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.3881c6a95a73becc684a.js","sourcesContent":["export default \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export const environment = {\n  production: true\n};\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ShowsService } from \"../shows.service\";\nimport {MoviesService} from \"../movies.service\";\n\n@Component({\n  selector: 'app-tv-shows-list',\n  templateUrl: './tv-shows-list.component.html',\n  styleUrls: ['./tv-shows-list.component.css']\n})\nexport class TvShowsListComponent implements OnInit {\n\n  year:string = \"\";\n  filter: string[] = [];\n  tvshows: any;\n  constructor(private route: ActivatedRoute, private showsService: ShowsService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.getParams();\n    this.getTrendingShows();\n    //console.log(this.movies);\n  }\n  goBack(): void {\n    this.location.back();\n  }\n  /* retrieve parameters on the url */\n  getParams(): void{\n    this.filter = [] // clear the filter\n    this.route.queryParams.subscribe(params => {\n      if(params['genre']){\n        this.filter.push('genres=' + params['genre']);\n      }\n      if(params['year']){\n        this.filter.push('years=' + params['year']);\n        this.year = params['year'];\n      }\n      if(params['language']){\n        this.filter.push('languages=' + params['language']);\n      }\n      if(params['country']){\n        this.filter.push('countries=' + params['country']);\n      }\n\n      //console.log(this.filter);\n\n    });\n  }\n\n  getTrendingShows(): void{\n    this.showsService.getTrendingShows(this.filter)\n      .subscribe(tvshows => this.tvshows = tvshows);\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeUrl'\n})\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(value: string): SafeResourceUrl{\n     return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n  }\n\n}\n","export default \"/* styling for movie details page */\\nmain{\\n  padding-bottom: 1em;\\n}\\nh1{\\n\\n  margin-bottom: 0px;\\n}\\niframe{\\n  display: block;\\n  height: 30em;\\n  width: 60%;\\n  margin: auto;\\n}\\n#movie-status{\\n  color: gray;\\n  text-transform: capitalize;\\n  padding: 0px;\\n  margin-bottom: 1em;\\n}\\nh2{\\n  text-transform: capitalize;\\n}\\n@media only screen and (max-width: 600px) {\\n\\n  iframe{\\n    width: 100%;\\n  }\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1DQUFtQztBQUNuQztFQUNFLG1CQUFtQjtBQUNyQjtBQUNBOztFQUVFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsY0FBYztFQUNkLFlBQVk7RUFDWixVQUFVO0VBQ1YsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsMEJBQTBCO0VBQzFCLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7QUFFQTtFQUNFLDBCQUEwQjtBQUM1QjtBQUNBOztFQUVFO0lBQ0UsV0FBVztFQUNiOztBQUVGIiwiZmlsZSI6Im1vdmllLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3R5bGluZyBmb3IgbW92aWUgZGV0YWlscyBwYWdlICovXG5tYWlue1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xufVxuaDF7XG5cbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuaWZyYW1le1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAzMGVtO1xuICB3aWR0aDogNjAlO1xuICBtYXJnaW46IGF1dG87XG59XG4jbW92aWUtc3RhdHVze1xuICBjb2xvcjogZ3JheTtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIHBhZGRpbmc6IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG5oMntcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG5cbiAgaWZyYW1le1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbn1cbiJdfQ== */\";","export default \"<section class=\\\"container\\\">\\n  <h2>Trending TV shows</h2>\\n  <form #showsSearchForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"show-genre\\\" class=\\\"form-label\\\">Genre:</label>\\n      <select id=\\\"show-genre\\\" name=\\\"show-genre\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"genre\\\">\\n        <option value=\\\"\\\">select a genre</option>\\n        <option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.slug\\\">{{ g.name }}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"show-year\\\" class=\\\"form-label\\\">Year:</label>\\n      <select id=\\\"show-year\\\" name=\\\"show-year\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"year\\\">\\n        <option value=\\\"\\\">select a year</option>\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{y}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"show-lang\\\" class=\\\"form-label\\\">Language:</label>\\n      <select id=\\\"show-lang\\\" name=\\\"show-lang\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"language\\\">\\n        <option value=\\\"\\\">select a language</option>\\n        <option *ngFor=\\\"let l of languages\\\" [value]=\\\"l.code\\\">{{ l.name }}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"show-country\\\" class=\\\"form-label\\\">Country:</label>\\n      <select id=\\\"show-country\\\" name=\\\"show-country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"country\\\">\\n        <option value=\\\"\\\">select a country</option>\\n        <option *ngFor=\\\"let c of countries\\\" [value]=\\\"c.code\\\">{{ c.name }}</option>\\n      </select>\\n    </div>\\n    \\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Search</button>\\n  </form>\\n</section>\";","export default \"<main class=\\\"container\\\" id=\\\"main-content\\\">\\n  <a (click)= \\\"goBack()\\\" class=\\\"return-link\\\"> new search</a>\\n  <h1>Top 10 trending movies</h1>\\n\\n  <ul *ngIf=\\\"movies?.length > 0; else noResult\\\">\\n    <li *ngFor=\\\"let movie of movies; let i=index\\\">\\n      <figure>\\n        <a routerLink=\\\"/movie-detail/{{movie.movie.ids.trakt}}\\\">\\n          <img src=\\\"{{moviesImages[i]}}\\\" alt=\\\"{{movie.movie.title}} poster\\\">\\n        </a>\\n        <figcaption>{{movie.movie.title}}</figcaption>\\n      </figure>\\n    </li>\\n  </ul>\\n  <ng-template  #noResult>\\n    <div class=\\\"no-result\\\">\\n      No result found !\\n    </div>\\n  </ng-template>\\n</main>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular trakt API test';\n}\n","export default \"\\n<router-outlet></router-outlet>\\n<footer class=\\\"container\\\">\\n  &copy; 2021 by Franck Cheuzem.\\n</footer>\\n\";","export default \"\\n<main *ngIf=\\\"movie\\\" class=\\\"container\\\" id>\\n  <a (click)= \\\"goBack()\\\" class=\\\"return-link\\\"> return to list</a>\\n<h1>Movie: {{movie.title}}</h1>\\n<p id=\\\"movie-status\\\">{{movie.status}} - {{movie.year}}</p>\\n<iframe *ngIf=\\\"movie.trailer; else elseBlock\\\"\\n[src] =\\\"(movie.trailer).replace('http','https').replace('watch?v=','embed/') | safeUrl\\\" allow=\\\"fullscreen\\\"></iframe>\\n\\n<ng-template #elseBlock>\\n  <div class=\\\"no-result\\\">\\n    No trailer available!\\n  </div>\\n</ng-template>\\n\\n<h2>Synopsis</h2>\\n\\n{{movie.overview}}\\n</main>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { ShowsService } from '../shows.service';\nimport { Country } from '../country';\nimport { Language } from \"../language\";\nimport { Genre } from \"../genre\";\nimport { Filter } from \"../filter\";\n\n@Component({\n  selector: 'app-shows-search-form',\n  templateUrl: './shows-search-form.component.html',\n  styleUrls: ['./shows-search-form.component.css']\n})\n\nexport class ShowsSearchFormComponent implements OnInit {\n\n  countries: Country[] = [];\n  genres: Genre[] = [];\n  languages: Language[] = [];\n  years = [\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"];\n\n  //Data will be retrieved from the form submission\n  //userModel: Filter = {genre: \"\", year: \"\", language: \"\", country: \"\"}; //Object\n  filter: Filter = {};\n  genre?: string = \"\"; \n  year?: string = \"\";\n  language?: string = \"\";\n  country?: string = \"\";\n\n  constructor(private showsService: ShowsService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getShowsCountries();\n    this.getShowsGenres();\n    this.getShowsLanguages();\n  }\n\n  onSubmit() {\n    //I was trying to parse values through object but it didn't work\n    /*\n    this.showsService.getTrendingShows(this.userModel)\n      .subscribe(\n        data => console.log(\"Success\", data),\n        error => console.log(\"Error\", error)\n        );\n    */      \n    this.filter = {};// clear the filter\n    //console.log(this.genre,this.language,this.country,this.year);\n    // add filter params\n    if(this.genre){\n      this.filter.genre = this.genre;\n    }\n    if(this.year){\n      this.filter.year = this.year;\n    }\n    if(this.language){\n      this.filter.language = this.language;\n    }\n    if(this.country){\n      this.filter.country = this.country;\n    }\n\n    console.log(this.filter);\n    //this.router.navigate(['/movies-list'], { queryParams: this.filter });\n  }\n\n  getShowsCountries() : void {\n    this.showsService.getShowsCountries().subscribe(countries => this.countries = countries);\n  }\n\n  getShowsGenres() : void {\n    this.showsService.getShowsGenres().subscribe(genres => this.genres = genres);\n  }\n\n  getShowsLanguages() : void {\n    this.showsService.getShowsLanguages().subscribe(languages => this.languages = languages);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { MoviesSearchFormComponent } from './movies-search-form/movies-search-form.component';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport { SafeUrlPipe } from './safe-url.pipe';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ShowsSearchFormComponent } from './shows-search-form/shows-search-form.component';\nimport { TvShowsListComponent } from './tv-shows-list/tv-shows-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesSearchFormComponent,\n    MoviesListComponent,\n    SafeUrlPipe,\n    MovieDetailComponent,\n    ShowsSearchFormComponent,\n    TvShowsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatGridListModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\nmain{\\n  padding-bottom: 1em;\\n\\n}\\n\\nul li a{\\n  color: #687980\\n}\\n\\nul{\\n  padding: 0px;\\n}\\n\\nul li {\\n  margin-top: 2em;\\n  margin-bottom: 0.5em;\\n  list-style-type: none;\\n  display: inline-block;\\n  width: 50%;\\n  vertical-align: top;\\n  padding: 0em 1em;\\n}\\n\\nimg{\\n  display: block;\\n  height: 300px;\\n}\\n\\nfigure{\\n  height: 400px;\\n}\\n\\nfigcaption{\\n  text-transform: capitalize;\\n  font-size: 1.3em;\\n  margin-top: 0.6em;\\n}\\n\\n@media screen and (max-width: 650px) {\\n\\n  ul li {\\n    width: 100%\\n  }\\n\\n  img{\\n    margin: auto;\\n  }\\n\\n  figcaption{\\n    text-align: center;\\n  }\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsbUJBQW1COztBQUVyQjs7QUFFQTtFQUNFO0FBQ0Y7O0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxlQUFlO0VBQ2Ysb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQixxQkFBcUI7RUFDckIsVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsYUFBYTtBQUNmOztBQUNBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7O0FBRUE7O0VBRUU7SUFDRTtFQUNGOztFQUVBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztBQUVGIiwiZmlsZSI6Im1vdmllcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1haW57XG4gIHBhZGRpbmctYm90dG9tOiAxZW07XG5cbn1cblxudWwgbGkgYXtcbiAgY29sb3I6ICM2ODc5ODBcbn1cbnVse1xuICBwYWRkaW5nOiAwcHg7XG59XG51bCBsaSB7XG4gIG1hcmdpbi10b3A6IDJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNTAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBwYWRkaW5nOiAwZW0gMWVtO1xufVxuXG5pbWd7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuZmlndXJle1xuICBoZWlnaHQ6IDQwMHB4O1xufVxuXG5maWdjYXB0aW9ue1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgbWFyZ2luLXRvcDogMC42ZW07XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG5cbiAgdWwgbGkge1xuICAgIHdpZHRoOiAxMDAlXG4gIH1cblxuICBpbWd7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG5cbiAgZmlnY2FwdGlvbntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Country } from \"../country\";\nimport { Language } from \"../language\";\nimport { Genre } from \"../genre\";\nimport { Filter } from \"../filter\";\nimport { MoviesService } from \"../movies.service\";\nimport { Router} from '@angular/router';\n\n@Component({\n  selector: 'app-movies-search-form',\n  templateUrl: './movies-search-form.component.html',\n  styleUrls: ['./movies-search-form.component.css']\n})\nexport class MoviesSearchFormComponent implements OnInit {\n  genre?: string = \"\"; // movie Genre\n  year?: string = \"\"; // movie Year\n  language?: string = \"\"; // movie language\n  country?: string = \"\"; // movie country\n\n  years = [\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"];\n\n  genres:Genre[] = [];\n  languages:Language[] = [];\n  countries: Country[] = [];\n  filter: Filter = {};\n  constructor(private moviesService: MoviesService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getMoviesCountries();\n    this.getMoviesGenres();\n    this.getMoviesLanguages();\n  }\n  /* handle the search form submission */\n  onSubmit() {\n    this.filter = {};// clear the filter\n    //console.log(this.genre,this.language,this.country,this.year);\n    // add filter params\n    if(this.genre){\n      this.filter.genre = this.genre;\n    }\n    if(this.year){\n      this.filter.year = this.year;\n    }\n    if(this.language){\n      this.filter.language = this.language;\n    }\n    if(this.country){\n      this.filter.country = this.country;\n    }\n\n    //console.log(this.filter);\n    //location.href = this.moviesListUrl;\n    this.router.navigate(['/movies-list'], { queryParams: this.filter });\n   }\n\n  getMoviesCountries(): void {\n   this.moviesService.getMoviesCountries()\n   .subscribe(countries => this.countries = countries);\n }\n\n getMoviesLanguages(): void {\n  this.moviesService.getMoviesLanguages()\n  .subscribe(languages => this.languages = languages);\n}\n\ngetMoviesGenres(): void {\n this.moviesService.getMoviesGenres()\n .subscribe(genres => this.genres = genres);\n}\n\n}\n","export default \"form{\\n  width: 40%;\\n  margin: 1em auto;\\n\\n}\\nmain{\\n  padding-bottom: 1em;\\n}\\n@media only screen and (max-width: 500px) {\\n  form{\\n    width: 100%;\\n    margin: 1em auto;\\n\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllcy1zZWFyY2gtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjs7QUFFbEI7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0U7SUFDRSxXQUFXO0lBQ1gsZ0JBQWdCOztFQUVsQjtBQUNGIiwiZmlsZSI6Im1vdmllcy1zZWFyY2gtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcbiAgd2lkdGg6IDQwJTtcbiAgbWFyZ2luOiAxZW0gYXV0bztcblxufVxubWFpbntcbiAgcGFkZGluZy1ib3R0b206IDFlbTtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkge1xuICBmb3Jte1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMWVtIGF1dG87XG5cbiAgfVxufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MoviesService } from \"../movies.service\";\n\n\n@Component({\n  selector: 'app-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.css']\n})\nexport class MoviesListComponent implements OnInit {\n  year:string = \"\";\n  filter: string[] = [];\n  movies: any;\n  moviesImages : string [] = [];\n  numPerCol : number = 4;\n  numRows: number = 0;\n  constructor(private route: ActivatedRoute, private moviesService: MoviesService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.getParams();\n    this.getTrendingMovies();\n\n    //console.log(this.movies);\n  }\n  goBack(): void {\n    this.location.back();\n  }\n /* retrieve parameters on the url */\n  getParams(): void{\n    this.filter = [] // clear the filter\n    this.route.queryParams.subscribe(params => {\n      if(params['genre']){\n        this.filter.push('genres=' + params['genre']);\n      }\n      if(params['year']){\n        this.filter.push('years=' + params['year']);\n        this.year = params['year'];\n      }\n      if(params['language']){\n        this.filter.push('languages=' + params['language']);\n    }\n      if(params['country']){\n        this.filter.push('countries=' + params['country']);\n      }\n\n      //console.log(this.filter);\n\n    });\n  }\n\n  getTrendingMovies(): void{\n    this.moviesService.getTrendingMovies(this.filter)\n    .subscribe(\n      movies => {\n        this.movies = movies;\n        this.getMovieImages();\n        //this.displayMovies();\n      });\n\n  }\n\n  getMovieImages():void{\n    this.numRows = Math.ceil(this.movies.length/this.numPerCol);\n    for (let i = 0;i < this.movies.length;i++) {\n      this.moviesService.getMovieImages(String(this.movies[i].movie.ids.tmdb))\n      .subscribe((images: any) => {\n          this.moviesImages.push(\"https://image.tmdb.org/t/p/w300\" + String(images.posters[0].file_path));\n      });\n\n    }\n  }\n\n  displayMovies():void{\n\n    let main_elt = document.getElementById('main-content');\n    console.log(main_elt);\n\n    for (let i = 0; i < Math.ceil(this.movies.length/this.numPerCol); i++) {\n      let row_div = document.createElement('div');\n      row_div.className = 'row';\n      for (let j = i * this.numPerCol; j < (i*this.numPerCol) + this.numPerCol; j++) {\n        if(j < this.movies.length){\n          let div = document.createElement('div');\n          div.className = 'col-md-3';\n          let fig = document.createElement('figure');\n          let img = document.createElement('img');\n          img.setAttribute('src',this.moviesImages[j]);\n          img.setAttribute('alt',this.movies[j].movie.title + \" poster\");\n          let caption = document.createElement('figcaption');\n          caption.innerText = this.movies[j].movie.title;\n          fig.appendChild(img);\n          fig.appendChild(caption);\n          div.appendChild(fig);\n          row_div.appendChild(div);\n        }\n\n      }\n\n    //document.getElementById('main-content').appendChild(row_div);\n\n    }\n\n  }\n\n}\n","export default \"<main class=\\\"container\\\">\\n  <a (click)= \\\"goBack()\\\" class=\\\"return-link\\\"> new search</a>\\n  <h1>Top 10 trending tv shows</h1>\\n\\n\\n\\n  <ul *ngIf=\\\"tvshows?.length > 0; else noResult\\\">\\n    <li *ngFor=\\\"let tvshow of tvshows\\\">\\n      <a routerLink=\\\"/tvshow-detail/{{tvshow.tvshow.ids.trakt}}\\\">\\n        {{tvshow.tvshow.title}}\\n      </a>\\n    </li>\\n  </ul>\\n  <ng-template  #noResult>\\n    <div class=\\\"no-result\\\">\\n      No result found !\\n    </div>\\n  </ng-template>\\n</main>\\n\";","export default \"main{\\n  padding-bottom: 1em;\\n\\n}\\n\\nul li a{\\n  color: #687980\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR2LXNob3dzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjs7QUFFckI7O0FBRUE7RUFDRTtBQUNGIiwiZmlsZSI6InR2LXNob3dzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1haW57XG4gIHBhZGRpbmctYm90dG9tOiAxZW07XG5cbn1cblxudWwgbGkgYXtcbiAgY29sb3I6ICM2ODc5ODBcbn1cbiJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Country } from './country';\nimport { Language } from \"./language\";\nimport { Genre } from \"./genre\";\nimport { Filter } from \"./filter\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowsService {\n\n  private Url = 'https://api.trakt.tv/';  // URL to web api\n\n  constructor(private http: HttpClient,) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({ \n      'Content-Type': 'application/json',\n      'trakt-api-version': '2',\n      'trakt-api-key': '13ea95c9693cceb363b1fef70b372ec06213cb0d144ded8d7457b8ed055798ac'\n    })\n  };\n\n  //Get countries for shows\n  //Returns a list of countries for shows\n  getShowsCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>(this.Url + 'countries/shows', this.httpOptions)\n    .pipe(\n      tap(_ => this.log('fetched countires')),\n      catchError(this.handleError<Country[]>('getCoutries', []))\n    );\n  }\n\n  //Get genres for shows\n  //Returns a list of genres for shows\n  getShowsGenres(): Observable<Genre[]> {\n    return this.http.get<Genre[]>(this.Url + 'genres/shows', this.httpOptions)\n    .pipe(\n      tap(_ => this.log('fetched genres')),\n      catchError(this.handleError<Genre[]>('getGenres', []))\n    );\n  }\n\n  //Get languages for shows\n  //Returns a list of languages for shows\n  getShowsLanguages(): Observable<Language[]> {\n    return this.http.get<Language[]>(this.Url + 'languages/shows', this.httpOptions)\n    .pipe(\n      tap(_ => this.log('fetched languages')),\n      catchError(this.handleError<Language[]>('getLanguages', []))\n    );\n  }\n\n  //Get trending shows based on user's choice of genre, year, language, or country \n  //Returns a list of trending shows  \n  getTrendingShows(filter:string[]) {\n    //I was trying to get values from object but it didn't work\n    //var queryString = Object.keys(filter).map(key => key + '=' + filter.genre).join('&');\n    /*\n    if(Object.values(filter)){\n      var key = Object.keys(filter)\n      var value = Object.values(filter)\n      console.log(key + \"=\" + value)\n    }\n    */\n    filter.push('extended=full');\n    console.log(this.Url + 'shows/trending?' + filter.join('&'))\n    return this.http.get(this.Url + 'shows/trending?' + filter.join('&'), this.httpOptions)\n    .pipe(\n      tap(_ => this.log('fetched shows')),\n      catchError(this.handleError('getTrendingShows', []))\n    );\n  }\n\n  /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n  \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n  \n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n  \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log messages in the console */\n  private log(message: string) {\n    console.log(message)\n  }\n}\n","export default \"<main class=\\\"container\\\">\\n  <h1>Trending movies Search </h1>\\n  <p>Wondering what to watch? let's help you find movies that match  with your expectations.</p>\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"genre\\\">Genre:</label>\\n      <select class=\\\"form-control\\\"  id=\\\"genre\\\" name=\\\"genre\\\"\\n      [(ngModel)]=\\\"genre\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <option value=\\\"\\\">select a genre</option>\\n        <option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.slug\\\">{{g.name}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"year\\\">Year:</label>\\n      <select class=\\\"form-control\\\"  id=\\\"year\\\" name=\\\"year\\\"\\n      [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <option value=\\\"\\\" selected>select a year</option>\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{y}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"language\\\">Language:</label>\\n      <select class=\\\"form-control\\\"  id=\\\"language\\\" name=\\\"language\\\"\\n      [(ngModel)]=\\\"language\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <option value=\\\"\\\">select a language</option>\\n        <option *ngFor=\\\"let l of languages\\\" [value]=\\\"l.code\\\">{{l.name}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"country\\\">Country:</label>\\n      <select class=\\\"form-control\\\"  id=\\\"country\\\" country\\n      [(ngModel)]=\\\"country\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <option value=\\\"\\\">select a country</option>\\n        <option *ngFor=\\\"let c of countries\\\" [value]=\\\"c.code\\\">{{c.name}}</option>\\n      </select>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Search</button>\\n  </form>\\n</main>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { MoviesService } from \"../movies.service\";\n\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\nexport class MovieDetailComponent implements OnInit {\n movie: any;\n  constructor(private route: ActivatedRoute, private moviesService: MoviesService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.getMovie();\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  getMovie(): void {\n    const id = String(this.route.snapshot.paramMap.get('id'));\n    this.moviesService.getMovie(id)\n    .subscribe(movie => this.movie = movie);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError, retry,map, tap } from 'rxjs/operators';\nimport { Country } from \"./country\";\nimport { Language } from \"./language\";\nimport { Genre } from \"./genre\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'trakt-api-version': '2',\n      'trakt-api-key' : 'f553707c24635b6b454af5990ed3f88ed50dbd9cc5ba16992089fa9e0a4274c0'\n    })\n  };\n image_api_key : string = \"89a4c80912c77b3a55862d978346c308\";\n image_base_url : string = \"https://api.themoviedb.org/3/\";\n  constructor(private http: HttpClient) { }\n\n  /*\n * PURPOSE : fetch countries of movies\n *  PARAMS :  -\n * RETURNS : list of countries of movies\n *   NOTES :\n */\ngetMoviesCountries(): Observable<Country[]>{\n    return this.http.get<Country[]>('https://api.trakt.tv/countries/movies', this.httpOptions)\n            .pipe(\n              retry(2),\n              tap(_ => this.log('fetched countries')),\n              catchError(this.handleError<Country[]>('getMoviesCountries', []))\n            );\n  }\n\n  /*\n * PURPOSE : fetch languages of movies\n *  PARAMS :  -\n * RETURNS : list of languages of movies\n *   NOTES :\n */\ngetMoviesLanguages(): Observable<Language[]>{\n    return this.http.get<Language[]>('https://api.trakt.tv/languages/movies', this.httpOptions)\n            .pipe(\n              retry(2),\n              tap(_ => this.log('fetched languages')),\n              catchError(this.handleError<Language[]>('getMoviesLanguages', []))\n            );\n  }\n\n  /*\n * PURPOSE : fetch genres of movies\n *  PARAMS :  -\n * RETURNS : list of genres of movies\n *   NOTES :\n */\ngetMoviesGenres(): Observable<Genre[]>{\n    return this.http.get<Genre[]>('https://api.trakt.tv/genres/movies', this.httpOptions)\n            .pipe(\n              retry(2),\n              tap(_ => this.log('fetched genres')),\n              catchError(this.handleError<Genre[]>('getMoviesGenres', []))\n            );\n  }\n\n\n/*\n * PURPOSE :retrieve trending movies\n *  PARAMS : filter:string[] - search filter\n * RETURNS : list of trending movies-\n *   NOTES :\n */\ngetTrendingMovies(filter:string[]){\n    filter.push('extended=full');// get full info of items\n    //console.log('https://api.trakt.tv/movies/trending?' + filter.join('&'));\n    return this.http.get('https://api.trakt.tv/movies/trending?' + filter.join('&'), this.httpOptions)\n            .pipe(\n              retry(2),\n              tap(_ => this.log('fetched movies')),\n              catchError(this.handleError('getTrendingMovies', []))\n            );\n  }\n\n  /*\n * PURPOSE : retrieve a specific movie using its id\n *  PARAMS : id: string - movie id\n * RETURNS :  - movie in json\n *   NOTES :\n */\ngetMovie(id: string){\n\n  return this.http.get('https://api.trakt.tv/movies/' + id +'?extended=full', this.httpOptions)\n          .pipe(\n            retry(2),\n            tap(_ => this.log('fetched movie')),\n            catchError(this.handleError('getMovie', {}))\n          );\n\n}\n\n/*\n * PURPOSE : retrieve filename representing a movie poster\n *  PARAMS : id: string - id of the movie\n * RETURNS :  -\n *   NOTES :\n */\ngetMovieImages(id: string){\n  return this.http.get(this.image_base_url + 'movie/' + id +'/images?api_key=' + this.image_api_key)\n          .pipe(\n            retry(2),\n            tap(_ => this.log('fetched movie images')),\n            catchError(this.handleError('getMovieImage', {}))\n          );\n}\n\n  /**\n  * Handle Http operation that failed.\n  * Let the app continue.\n  * @param operation - name of the operation that failed\n  * @param result - optional value to return as the observable result\n  */\n private handleError<T>(operation = 'operation', result?: T) {\n   return (error: any): Observable<T> => {\n\n     // TODO: send the error to remote logging infrastructure\n     console.error(error); // log to console instead\n\n     // TODO: better job of transforming error for user consumption\n     this.log(`${operation} failed: ${error.message}`);\n\n     // Let the app keep running by returning an empty result.\n     return of(result as T);\n   };\n }\n\n log(message:string):void{\n   console.log(message);\n\n }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93cy1zZWFyY2gtZm9ybS5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoviesSearchFormComponent } from './movies-search-form/movies-search-form.component';\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { ShowsSearchFormComponent } from './shows-search-form/shows-search-form.component';\n\nconst routes: Routes = [\n  { path: 'movies-search', component: MoviesSearchFormComponent},\n  { path: 'movies-list', component: MoviesListComponent},\n  { path: 'movie-detail/:id', component: MovieDetailComponent},\n  { path: '', redirectTo: '/movies-search', pathMatch: 'full' },\n  { path: 'shows-search', component: ShowsSearchFormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}